@model List<SimpleReportViewModel>
@{
    var XLabels = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Select(x => x.DimensionOne).ToList());
    var YValues = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Select(x => x.Quantity).ToList());
    ViewData["Title"] = "Bar Chart";
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Promedio</title>
</head>
<body>
    @if (ViewBag.id == 1)
    {
        <h3>Propedio Total de Permisos al Año: @ViewBag.Total</h3>
        <h3>@ViewBag.Key @ViewBag.Value</h3>
    }
    <div class="box-body">
        <div class="chart-container">
            <canvas id="chart" style="width:100%; height:500px"></canvas>
        </div>
    </div>
</body>
</html>

<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.7.2/Chart.bundle.min.js"></script>
<script src="https://code.jquery.com/jquery-3.3.1.min.js"></script>

<script type="text/javascript">

        $(function () {
    var chartName = "chart";
        var ctx = document.getElementById(chartName).getContext('2d');
        var data = {
                labels: @Html.Raw(XLabels),
                datasets: [{
                    label: "Departments Chart",
                    backgroundColor: [
                        'rgba(255, 99, 132, 0.2)',
                        'rgba(54, 162, 235, 0.2)',
                        'rgba(255, 206, 86, 0.2)',
                        'rgba(75, 192, 192, 0.2)',
                        'rgba(153, 102, 255, 0.2)',
                        'rgba(255, 159, 64, 0.2)',
                        'rgba(240, 147, 234, 0.2)',
                        'rgba(147, 240, 200, 0.2)',
                        'rgba(182, 184, 184, 0.2)',
                        'rgba(34, 196, 240, 0.2)',
                        'rgba(196, 240, 34, 0.2)',
                        'rgba(192, 26, 112, 0.2)',
                        'rgba(8, 46, 185, 0.2)',
                        'rgba(185, 61, 8, 0.2)',
                        'rgba(132, 185, 8, 0.2)',
                        'rgba(185, 8, 11, 0.2)',
                        'rgba(172, 184, 105, 0.2)',
                        'rgba(105, 163, 184, 0.2)',
                        'rgba(27, 50, 58, 0.2)',
                        'rgba(50, 41, 41, 0.2)',
                        'rgba(212, 182, 119, 0.2)',
                        'rgba(96, 75, 30, 0.2)'
                    ],
                    borderColor: [
                        'rgba(255,99,132,1)',
                        'rgba(54, 162, 235, 1)',
                        'rgba(255, 206, 86, 1)',
                        'rgba(75, 192, 192, 1)',
                        'rgba(153, 102, 255, 1)',
                        'rgba(255, 159, 64, 1)',
                        'rgba(240, 147, 234, 1)',
                        'rgba(147, 240, 200, 1)',
                        'rgba(182, 184, 184, 1)',
                        'rgba(34, 196, 240, 1)',
                        'rgba(196, 240, 34, 1)',
                        'rgba(192, 26, 112, 1)',
                        'rgba(8, 46, 185, 1)',
                        'rgba(185, 61, 8, 1)',
                        'rgba(132, 185, 8, 1)',
                        'rgba(185, 8, 11, 1)',
                        'rgba(172, 184, 105, 1)',
                        'rgba(105, 163, 184, 1)',
                        'rgba(27, 50, 58, 1)',
                        'rgba(50, 41, 41, 1)',
                        'rgba(212, 182, 119, 1)',
                        'rgba(96, 75, 30, 1)'
                    ],
                    borderWidth: 1,
                    data: @Html.Raw(YValues)
    }]
            };

var options = {
                maintainAspectRatio: false,
                scales: {
                    yAxes: [{
                        ticks: {
                            min: 0,
                            beginAtZero: true
                        },
                        gridLines: {
                            display: true,
                            color: "rgba(255,99,164,0.2)"
                        }
}],
                    xAxes: [{
                        ticks: {
                            min: 0,
                            beginAtZero: true
                        },
                        gridLines: {
                            display: false
                        }
                    }]
                }
            };

       var myChart = new  Chart(ctx, {
                options: options,
                data: data,
                type:'pie'

            });
        });
</script>  